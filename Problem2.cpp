#include "Problem2.h"
#include <iostream>

/*Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.*/

int nextFibonacci(int a, int b)
{
	return a + b;
}

bool isEven(int numb)
{
	return( numb & 1) == 0;
}

void getSumOfEvenUntil_4_m()
{
	int currentFibonacci = nextFibonacci(1, 2);
	int lastFibonacci = 2;
	int sum = 0;
	while (currentFibonacci < 4000000)
	{
		int tmp = nextFibonacci(lastFibonacci, currentFibonacci);
		if (isEven(tmp))
			sum += tmp;
		lastFibonacci = currentFibonacci;
		currentFibonacci = tmp;
	}
	std::cout << sum << std::endl;
}

void problem2()
{
	getSumOfEvenUntil_4_m();
	system("pause");
}